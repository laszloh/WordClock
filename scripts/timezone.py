import requests
import csv
import io
import re

URL = "https://raw.githubusercontent.com/nayarsystems/posix_tz_db/master/zones.csv"
namekey_regex = r"[\W]"
codekey_regex = r"([-])|([+])|([\W])"

def gencodekey(match):
  if match.group(1) is not None:
    return "m"
  if match.group(2) is not None:
    return "p"
  if match.group(3) is not None:
    return "_"

response = requests.get(URL)
data = response.content
memory_file = io.StringIO(data.decode('utf8'))
csv_reader = csv.reader(memory_file, delimiter=',')

tz_name = dict()
tz_code = dict()
timezones = dict()

for row in csv_reader:
    name = row[0]
    keyn = re.sub(namekey_regex, "_", name)
    tz_name[keyn] = name

    code = row[1]
    keyc = re.sub(codekey_regex, gencodekey, code)
    tz_code[keyc] = code

    timezones[keyn] = keyc

f = open("../src/genTimezone.h", "w")
f.write("""/*
 * autogenerated code by timezones.py
 */

#include <Arduino.h>

namespace data {

// timezone names
""")

for k,v in tz_name.items():
    f.write(f"constexpr const char {k}[] PROGMEM = \"{v}\";\n")

f.write("""

// timezone codes
""")
for k,v in tz_code.items():
    f.write(f"constexpr const char {k}[] PROGMEM = \"{v}\";\n")

f.write("""

} // namespace data

// timezones mapping table
constexpr const char *timezones[][2] PROGMEM = {
""")
for k,v in timezones.items():
    f.write(f"{{ data::{k}, data::{v} }},\n")
f.write("};\n")

f.write(f"constexpr size_t timezoneSize = {len(timezones)};")

f.write("""

//timezone enum
enum TZ_Names : size_t {
""")
counter = 0
for k in timezones.keys():
    if counter == 0:
      f.write(f"TZ_{k} = 0,\n")
    else:
      f.write(f"TZ_{k},\n")
    counter += 1
f.write("};")